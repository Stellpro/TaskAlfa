@page "/BoardStatus"
@using TaskAlfa.Pages.Task
@inherits ItemViewModel
<h3>Board</h3>
<table class="table  table-sm mt-2">
    <thead>
        <tr>
            <th>
                <SortIcon Column="Status1" Title="Status1" Sort="@Sort"></SortIcon>
                <i class="btn glyphicon glyphicon-edit " @onclick="@(() => CreateItem(1))"></i>
            </th>
            <th>
                <SortIcon Column="Statuse2" Title="Status2" Sort="@Sort"></SortIcon>
                <i class="btn glyphicon glyphicon-edit " @onclick="@(() => CreateItem(2))"></i>
            </th>
            <th>
                <SortIcon Column="Statuse3" Title="Status3" Sort="@Sort"></SortIcon>
                <i class="btn glyphicon glyphicon-edit " @onclick="@(() => CreateItem(3))"></i>
            </th>
        </tr>
    </thead>
    <tbody>
    <td>

        @foreach (var item in BoardItem)
        {
            @if (item.Key == 1)
                @foreach (var i in item.Value.Where(x => x.TaskStatusId == item.Key).ToList())
                {
                <tr @ondblclick="@(() => Edit(i))">

                    <MatCard style="min-width: 300px;margin-bottom:10px">
                        <MatCardContent>
                            <MatHeadline6 class="p-1 mb-0">
                                <div class="row">
                                    <div class="col-7 p-0" style="font-size:14px">
                                        @i.TaskName

                                    </div>
                                    @*<div class="col-6" style="font-size:14px"> </div>*@
                                    <div class="col-5 text-right p-0">
                                        @*<i class="btn glyphicon glyphicon-eye-open" @onclick="@(()=>PreviewItem(c))"></i>*@
                                        <i class="btn glyphicon glyphicon-edit" @onclick="@(() => Edit(i))"></i>

                                        <i class="btn glyphicon glyphicon-trash cursor" @onclick="@(() => Remove(i))"></i>

                                    </div>
                                </div>
                            </MatHeadline6>
                            <MatBody2 class="p-1 mb-0 pt-0">
                                <div class="mb-1"><span style="margin-right:15px">@i.PlanDuration </span> @i.RealDuration</div>
                            </MatBody2>
                        </MatCardContent>
                    </MatCard>

                </tr>
            }
        }


        </td >
        <td>

            @foreach (var item in BoardItem)
            {
                @if (item.Key == 2)
                    @foreach (var i in item.Value.Where(x => x.TaskStatusId == item.Key).ToList())
                    {
                    <tr @ondblclick="@(() => Edit(i))">

                        <MatCard style="min-width: 300px;margin-bottom:10px">
                            <MatCardContent>
                                <MatHeadline6 class="p-1 mb-0">
                                    <div class="row">
                                        <div class="col-7 p-0" style="font-size:14px">
                                            @i.TaskName

                                        </div>
                                        @*<div class="col-6" style="font-size:14px"> </div>*@
                                        <div class="col-5 text-right p-0">
                                            @*<i class="btn glyphicon glyphicon-eye-open" @onclick="@(()=>PreviewItem(c))"></i>*@
                                            <i class="btn glyphicon glyphicon-edit" @onclick="@(() => Edit(i))"></i>

                                            <i class="btn glyphicon glyphicon-trash cursor" @onclick="@(() => Remove(i))"></i>

                                        </div>
                                    </div>
                                </MatHeadline6>
                                <MatBody2 class="p-1 mb-0 pt-0">
                                    <div class="mb-1"><span style="margin-right:15px">@i.PlanDuration </span> @i.RealDuration</div>
                                </MatBody2>
                            </MatCardContent>
                        </MatCard>

                    </tr>
                }
            }


            </td>
            <td>

                @foreach (var item in BoardItem)
                {
                    @if (item.Key == 3)
                        @foreach (var i in item.Value.Where(x => x.TaskStatusId == item.Key).ToList())
                        {
                        <tr @ondblclick="@(() => Edit(i))">

                            <MatCard style="min-width: 300px;margin-bottom:10px">
                                <MatCardContent>
                                    <MatHeadline6 class="p-1 mb-0">
                                        <div class="row">
                                            <div class="col-7 p-0" style="font-size:14px">
                                                @i.TaskName

                                            </div>
                                            @*<div class="col-6" style="font-size:14px"> </div>*@
                                            <div class="col-5 text-right p-0">
                                                @*<i class="btn glyphicon glyphicon-eye-open" @onclick="@(()=>PreviewItem(c))"></i>*@
                                                <i class="btn glyphicon glyphicon-edit" @onclick="@(() => Edit(i))"></i>

                                                <i class="btn glyphicon glyphicon-trash cursor" @onclick="@(() => Remove(i))"></i>

                                            </div>
                                        </div>
                                    </MatHeadline6>
                                    <MatBody2 class="p-1 mb-0 pt-0">
                                        <div class="mb-1"><span style="margin-right:15px">@i.PlanDuration </span> @i.RealDuration</div>
                                    </MatBody2>
                                </MatCardContent>
                            </MatCard>

                        </tr>
                    }
                }

                </td>
                </tbody>
            </table>
            @if (mEditViewModel.DialogIsOpen != null && mCurrentItem != null)
            {
                <EditTask ViewModel="@mEditViewModel" Save="@Save" Reload="@Reload" />
                <ConfirmationDialog Model=@ConfirmDialogModel Answer="@ConfirmRemove"></ConfirmationDialog>
            }